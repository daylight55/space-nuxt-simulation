{
  "eslint.enable": true,
  "eslint.run": "onType",
  "vetur.format.defaultFormatter.js": "prettier-eslint",
  "vetur.format.defaultFormatter.css": "prettier",
  "vetur.format.defaultFormatter.less": "prettier",
  "vetur.format.defaultFormatter.postcss": "prettier",
  "vetur.format.defaultFormatter.scss": "prettier",
  "vetur.format.defaultFormatter.stylus": "stylus-supremacy",
  "vetur.format.defaultFormatter.ts": "prettier",
  "vetur.validation.style": true,
  "vetur.validation.template": true,
  "vetur.format.defaultFormatter.html": "prettier",
  // "vetur.format.defaultFormatter.html": "prettyhtml",
  "vetur.format.defaultFormatterOptions": {
    "prettier": {
      "semi": true,
      "singleQuote": true,
      "trailingComma": "es5",
      "arrowParens": "always"
    },
    "prettyhtml": {
      "wrapAttributes": true
    }
  },
  // "vetur.format.html.wrap_attributes":"force-expand-multiline",
  "prettier.bracketSpacing": true,
  "prettier.singleQuote": true,
  "prettier.semi": false,
  "prettier.tabWidth": 2,
  "prettier.useTabs": false,
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true
  },
  "auto-close-tag.enableAutoCloseTag": true,
  "auto-close-tag.enableAutoCloseSelfClosingTag": true,
  // Defines whether an open brace is put onto a new line for control blocks or not.
  // "javascript.format.placeOpenBraceOnNewLineForControlBlocks": true,
  // Defines whether an open brace is put onto a new line for functions or not.
  // "javascript.format.placeOpenBraceOnNewLineForFunctions": true,
  // "javascript.format.insertSpaceBeforeFunctionParenthesis": false,
  // "typescript.format.insertSpaceBeforeFunctionParenthesis": true,
  "[javascript]": {
    // "editor.defaultFormatter": "remimarsal.prettier-now",
    "editor.tabSize": 2
  },
  "[vue]": {
    // "editor.defaultFormatter": "remimarsal.prettier-now"
  }
}
